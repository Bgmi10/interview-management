generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
  model User {
    id                   Int              @id @default(autoincrement())
    firstName            String              
    lastName             String?          @default("")
    phoneNumber          String?          @unique
    profilePic           String?          @default("")
    companyName          String?          @default("")
    companyWebsiteUrl    String?          @default("")
    companyLocation      String?          @default("")
    companyLogo          String?          @default("")
    industry             IndustryEnum?    @default(Others)
    email                String           @unique
    password             String             
    role                 Role             
    linkedIn             String?          @default("")
    createdAt            DateTime         @default(now())
    updatedAt            DateTime         @updatedAt
    resume               String?          @default("")
    portfolioUrl         String?          @default("")
    skills               String[]         @default([])    
    experience           String?          @default("")
    collageName          String?          @default("")
    specilization        String?          @default("")
    jobApplications      JobApplication[] 
    candidateFeedback    FeedBack[]       @relation("CandidateFeedback")
    recuriterFeedback    FeedBack[]       @relation("RecruiterFeedback")
    jobPosts             JobPost[]        @relation("RecruiterJobPosts")
  }
model JobApplication {
  id          Int       @id @default(autoincrement())
  candidate   User      @relation(fields: [candidateId], references: [id])  
  candidateId Int
  job         JobPost   @relation(fields: [jobId], references: [id])
  jobId       Int
  status      String    @default("Pending") 
  appliedAt   DateTime  @default(now())
}
model JobPost {
  id           Int       @id @default(autoincrement())
  title        String
  description  String
  companyName  String
  location     String 
  salary       String
  jobType      String
  postedAt     DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  recruiter    User      @relation("RecruiterJobPosts", fields: [recruiterId], references: [id])
  recruiterId  Int
  applications JobApplication[] 
}
model FeedBack {
  id           Int    @id @default(autoincrement())
  rating       Int    @default(0)
  candidateId  Int
  recruiterId  Int
  candidate    User   @relation("CandidateFeedback", fields: [candidateId], references: [id])
  recruiter    User   @relation("RecruiterFeedback", fields: [recruiterId], references: [id])
}
model Otp {
  id         Int       @id @default(autoincrement())
  otp        String    @unique
  expTime    DateTime
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  email      String    @unique
}

enum IndustryEnum {
  IT
  HealthCare
  Finance
  Education
  Retail
  Manufacturing
  Others
}

enum JobStatusEnum {
  Pending
  Accepted
  Rejected
}

enum Role {
  Candidate
  Recruiter
}